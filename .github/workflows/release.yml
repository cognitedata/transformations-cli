name: release

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
        
    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip poetry
        poetry config virtualenvs.create false
        poetry install

    - name: Check codestyle
      run: |
        pre-commit run --all

    - name: Run tests
      run: |
        PYTHONPATH=cognite/transformations_cli poetry run pytest  -v  --cov-report xml:coverage.xml --cov=cognite/transformations_cli
        coverage xml
      env:
          CLIENT_ID: ${{secrets.EXTRACTORS_CLIENT_ID}}
          CLIENT_SECRET: ${{secrets.EXTRACTORS_CLIENT_SECRET}}

    - uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml

    - name: Build package
      run: poetry build
    
    - name: Build docs
      run: cd docs && make html

    - name: Release to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: twine upload --verbose dist/* || echo 'Version exists'
      